# SPDX-FileCopyrightText: 2021 GSMA and all contributors.
#
# SPDX-License-Identifier: Apache-2.0
#
openapi: 3.0.3
info:
  title: Blockchain-Adapter
  description: This is the REST api specification for the blockchain-adapter
  version: 0.1.2
  contact:
    name: Simon Schulz
    email: Simon.Schulz01@telekom.de
tags:
  - name: certificate
    description: Access to stored certificates
  - name: contract
    description: Access to smartcontract data
  - name: config
    description: Access to configuration
  - name: status
    description: Access to status information
  - name: discovery
    description: Access to discovery information
  - name: webhook
    description: Access to webhooks for event subscription
paths:
  /discovery/msps:
    get: 
      description: Show a list of all MSPs
      tags:
        - discovery
      operationId: getDiscoveryMSPs
      responses:
        '200':  
          description: A list of all discovered MSPs
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Error
          content: {}
  /discovery/msps/{mspid}:
    get:
      description: Show details for a specific MSP
      tags:
        - discovery
      operationId: getDiscoveryMSP
      parameters:
        - in: path
          name: mspid
          required: true
          schema:
            type: string
          description: Name of a MSP
      responses:
        '200':  
          description: Details about the requested MSP
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Error
          content: {}
  /status:
    get:
      description: Show version information of the API
      tags:
        - status
      operationId: getApiStatus
      responses:
        '200':  
          description: The status of the service
          content:
            application/json:
              schema:
                type: object
        '500':
          description: Internal Error
          content: {}
  /status/hyperledger/{mspid}:
    get:
      description: Show hyperledger status information of an MSP
      operationId: getApiStatusHyperledgerMSP
      parameters:
      - description: Name of a MSP
        explode: false
        in: path
        name: mspid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - status
  /status/offchain/{mspid}:
    get:
      description: Show status information of an MSP
      operationId: getStatusMSP
      parameters:
      - description: Name of a MSP
        explode: false
        in: path
        name: mspid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - status
  /private-documents:
    post:
      description: Upload a private document, shared between our own organization and a partner MSP
      tags:
        - contract
      operationId: uploadPrivateDocument
      requestBody:
        description: A document that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/PrivateDocument.yaml
        required: true
      responses:
        '200':  
          description: Successful operation, returns the referenceID and the txID of the stored document
          content:
            application/json:
              schema:
                $ref: models/PrivateDocumentResponse.yaml
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
      x-codegen-request-body-name: body
    get:
      description: show all private documents that are in the transient storage
      tags:
        - contract
      operationId: fetchPrivateDocumentReferenceIDs
      responses:
        '200':  
          description: Successful operation, returns an array of referenceIDs of the stored documents
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        '500':
          description: Internal Error
          content: {}
  /private-documents/{referenceID}:
    get:
      description: Fetch a private document from the database, identified by its referenceID
      tags:
        - contract
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID of the document
      operationId: fetchPrivateDocument
      responses:
        '200':
          description: Successful operation, returns document
          content:
            application/json:
              schema:
                $ref: models/PrivateDocumentResponse.yaml
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
    delete:
      description: Delete a private document from the database, identified by its referenceID
      tags:
        - contract
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID for the document to delete
      operationId: deletePrivateDocument
      responses:
        '200':
          description: Successful deletion
          content: {}
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /webhooks/subscribe:
    post:
      description: subscribes a client to receive the specified event
      tags:
        - webhook
      requestBody:
        description: A document that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/SubscriptionRequest.yaml
      responses:
        '201':
          description: Subscription successfully created
          content:
            text/plain:
              schema:
                type: string
                description: The unique identifier of the associated subscription (subscriptionID)
                example: 2531329f-fb09-4ef7-887e-84e648214436
        '500':
          description: Internal Server Error
          content: {}
      callbacks:
        # the name `onData` is a convenience locator
        onData:
          # when data is sent, it will be sent to the `callbackUrl` provided
          '{$request.query.callbackUrl}':
            post:
              requestBody:
                description: subscription payload
                content:
                  application/json:
                    schema:
                      $ref: models/SubscriptionPayload.yaml
              responses:
                '202':
                  description: the app should return this when the data was received successfully
                '204':
                  description: the app should return this when it is no longer interested in further updates
  /webhooks/{subscriptionID}:
    delete:
      description: unsubscribes a client from the specified event
      tags:
        - webhook
      parameters:
        - in: path
          name: subscriptionID          
          required: true
          description: The unique identifier of the subscription you want to unsubscribe from
          schema:
            type: string
            example: 2531329f-fb09-4ef7-887e-84e648214436
      responses:
        '200':
          description: Subscription successfully deleted
          content: {}
        '404':
          description: Subscription not found
          content: {}
        '500':
          description: Internal Server Error
          content: {}
  /webhooks:
    get:
      description: show all subscriptions
      tags:
        - webhook
      responses:
        '200':
          description: List of Subscriptions
          content: 
            application/json:
              schema:
                type: object
        '500':
          description: Internal Server Error
          content: {}
  /signatures/{referenceID}:
    put:
      description: 'store a signature for the document identified by its referenceID on the ledger'
      tags:
        - contract
      operationId: uploadSignature
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID of the document
      responses:
        '200':
          description: Successful operation, returns transaction hash
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
      requestBody:
        description: a document signature that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/DocumentSignature.yaml
        required: true
      x-codegen-request-body-name: body
  /signatures/{referenceID}/{signerMSP}:
    get:
      description: Fetch all signatures for a given referenceID and a signerMSP from the ledger
      tags:
        - contract
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID of the document
        - in: path
          name: signerMSP
          required: true
          schema:
            type: string
          description: The signers MSP name
      operationId: fetchSignatures
      responses:
        '200':
          description: Successful operation, returns json of signatures
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /signatures/{referenceID}/{signerMSP}/verify:
    get:
      description: Fetch all signatures for a given reference id, creator and signer from the ledger and verify the content against the on chain referencepayload link
      tags:
        - contract
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID
        - in: path
          name: signerMSP
          required: true
          schema:
            type: string
          description: The signers MSP name 
      operationId: verifySignatures
      responses:
        '200':
          description: Successful operation, returns json of verified signatures
          content:
            text/plain:
              schema:
                type: object
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /payloadlink/{referenceID}:
    get:
      description: Fetch the stored referencepayloadlink for a given reference id and creator
      tags:
        - contract
      parameters:
        - in: path
          name: referenceID
          required: true
          schema:
            type: string
          description: The referenceID
      operationId: getReferencePayloadLink
      responses:
        '200':
          description: Successful operation, returns the referencepayloadlink
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /config/offchain-db:
    put:
      description: Update the configuration of the offchain-db
      tags:
        - config
      operationId: setOffchainDBConfig
      requestBody:
        description: A configuration for the offchain-db
        content:
          application/json:
            schema:
              $ref: models/OffchainDBConfig.yaml
        required: true
      responses:
        '200':
          description: Successful operation, returns transaction hash
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
      x-codegen-request-body-name: body
    get:
      description: Read back the configuration of the offchain-db
      tags:
        - config
      operationId: getOffchainDBConfig
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: models/OffchainDBConfig.yaml
          description: The current configuration for the offchain-db
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /certificate/root:
    put:
      description: Upload a root certificate
      tags:
        - certificate
      operationId: setCertificateRoot
      requestBody:
        description: Set the signature root certificate.
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
                description: BUGBUG openapi does not like string bodies?! Use json array for now
                example: ["-----BEGIN CERTIFICATE-----..."]
        
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
  /certificate/revoke:
    post:
      description: Upload a certificate revocation list (CRL), revoked certificates are stored on the ledger and cannot be used for signing thereafter
      tags:
        - certificate
      operationId: submitCertificateRevocationList
      requestBody:
        description: Submit a certificate revocation list signed by a CA.
        content:
          application/json:
            schema:
              $ref: models/CertificateRevocationList.yaml
        required: true
      x-codegen-request-body-name: body
      responses:
        '200':
          description: Successful operation
          content:
            text/plain:
              schema:
                type: object
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: models/ErrorCode.yaml
