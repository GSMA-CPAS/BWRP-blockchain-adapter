openapi: 3.0.1
info:
  title: Blockchain-Adapter
  description: This is the REST api specification for the blockchain-adapter
  version: 1.0.0
  contact:
    name: Simon Schulz
    email: Simon.Schulz01@telekom.de
tags:
  - name: offchain-db-adapter-config
    description: Configuration for the offchain-db-adapter
  - name: private-document
    description: Access to private documents
  - name: upload-signature
    description: Upload a signature for a document
paths:
  /private-documents:
    post:
      description: Upload a private document
      tags:
        - private-document
      operationId: uploadPrivateDocument
      requestBody:
        description: A document that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/PrivateDocument.yaml
        required: true
      responses:
        '200':
          description: 'successful operation, returns hash of stored document'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Error
          content: {}
  /config/offchain-db-adapter:
    put:
      description: Update the configuration of the offchain-db-adapter
      tags:
        - offchain-db-adapter-config
      operationId: setOffchainDBAdapterConfig
      requestBody:
        description: A configuration for the offchain-db-adapter
        content:
          application/json:
            schema:
              $ref: models/OffchainDBAdapterConfig.yaml
        required: true
      responses:
        '200':
          description: 'successful operation, returns transaction hash'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Error
          content: {}
  /signatures:
    post:
      description: 'store a signature for a given document on the ledger'
      tags:
        - upload-signature
      operationId: uploadSignature
      responses:
        '200':
          description: 'successful operation, returns transaction hash'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Server Error
          content: {}
      requestBody:
        description: a document signature that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/DocumentSignature.yaml
        required: true
  /signatures/{hash}/{msp}:
    get:
      description: 'fetch all signatures for a given msp and a given document hash from the ledger'
      tags:
        - fetch-signatures
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
          description: The document hash
        - in: path
          name: msp
          required: true
          schema:
            type: string
          description: A MSP name
      operationId: fetchSignatures
      responses:
        '200':
          description: 'successful operation, returns json of signatures'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Server Error
          content: {}