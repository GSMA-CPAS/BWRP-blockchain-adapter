openapi: 3.0.1
info:
  title: Blockchain-Adapter
  description: This is the REST api specification for the blockchain-adapter
  version: 1.0.0
  contact:
    name: Simon Schulz
    email: Simon.Schulz01@telekom.de
tags:
  - name: contract
    description: Access to smartcontract data
  - name: config
    description: Access to configuration
paths:
  /private-documents:
    post:
      description: Upload a private document
      tags:
        - contract
      operationId: uploadPrivateDocument
      requestBody:
        description: A document that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/PrivateDocument.yaml
        required: true
      responses:
        '200':
          description: 'successful operation, returns hash of stored document'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '400':
          description: Bad Request
          content: {}
        '500':
          description: Internal Error
          content: {}
      x-codegen-request-body-name: body 
  /private-documents/{hash}:
    get:
      description: Fetch a private document from the database
      tags:
        - contract
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
          description: The document hash
      operationId: fetchPrivateDocument
      responses:
        '200':
          description: 'successful operation, returns document'
          content:
            application/json:
              schema:
                $ref: models/PrivateDocument.yaml
        '500':
          description: Internal Error
          content: {}
  /signatures:
    post:
      description: 'store a signature for a given document on the ledger'
      tags:
        - contract
      operationId: uploadSignature
      responses:
        '200':
          description: 'successful operation, returns transaction hash'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Server Error
          content: {}
      requestBody:
        description: a document signature that should be uploaded
        content:
          application/json:
            schema:
              $ref: models/DocumentSignature.yaml
        required: true
      x-codegen-request-body-name: body
  /signatures/{hash}/{msp}:
    get:
      description: 'fetch all signatures for a given msp and a given document hash from the ledger'
      tags:
        - contract
      parameters:
        - in: path
          name: hash
          required: true
          schema:
            type: string
          description: The document hash
        - in: path
          name: msp
          required: true
          schema:
            type: string
          description: A MSP name
      operationId: fetchSignatures
      responses:
        '200':
          description: 'successful operation, returns json of signatures'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Server Error
          content: {}
  /signatures/subscribe:
    post:
      description: subscribes a client to receive new signature events
      tags:
        - contract
      parameters:
        - in: query
          name: callbackUrl          
          required: true
          description: the location where data will be sent
          schema:
            type: string
            format: uri
            example: https://myapp.local
      responses:
        '201':
          description: subscription successfully created
          content:
            application/json:
              schema:
                description: subscription information
                required:
                  - subscriptionId
                properties:
                  subscriptionId:
                    description: this unique identifier allows management of the subscription
                    type: string
                    example: 2531329f-fb09-4ef7-887e-84e648214436
      callbacks:
        # the name `onData` is a convenience locator
        onData:
          # when data is sent, it will be sent to the `callbackUrl` provided
          # when making the subscription PLUS the suffix `/data`
          '{$request.query.callbackUrl}/signature_data':
            post:
              requestBody:
                description: subscription payload
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        timestamp:
                          type: string
                          format: date-time
                        userData:
                          type: string
              responses:
                '202':
                  description: the app should return this when the data was received successfully
                '204':
                  description: the app should return this when it is no longer interested in further updates
  /config/offchain-db-adapter:
    put:
      description: Update the configuration of the offchain-db-adapter
      tags:
        - config
      operationId: setOffchainDBAdapterConfig
      requestBody:
        description: A configuration for the offchain-db-adapter
        content:
          application/json:
            schema:
              $ref: models/OffchainDBAdapterConfig.yaml
        required: true
      responses:
        '200':
          description: 'successful operation, returns transaction hash'
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
        '500':
          description: Internal Error
          content: {}
      x-codegen-request-body-name: body
