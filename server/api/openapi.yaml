openapi: 3.0.1
info:
  contact:
    email: Simon.Schulz01@telekom.de
    name: Simon Schulz
  description: This is the REST api specification for the blockchain-adapter
  title: Blockchain-Adapter
  version: 0.0.4
servers:
- url: /
tags:
- description: Access to smartcontract data
  name: contract
- description: Access to configuration
  name: config
- description: Access to status information
  name: status
- description: Access to discovery information
  name: discovery
paths:
  /discovery/msps:
    get:
      description: Show a list of all MSPs
      operationId: getDiscoveryMSPs
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: A list of all discovered MSPs
        "500":
          content: {}
          description: Internal Error
      tags:
      - discovery
      x-eov-operation-handler: controllers/DiscoveryController
  /discovery/msps/{mspid}:
    get:
      description: Show details for a specific MSP
      operationId: getDiscoveryMSP
      parameters:
      - description: Name of a MSP
        explode: false
        in: path
        name: mspid
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: Details about the requested MSP
        "500":
          content: {}
          description: Internal Error
      tags:
      - discovery
      x-eov-operation-handler: controllers/DiscoveryController
  /status:
    get:
      description: Show version information of the API
      operationId: getApiStatus
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
          description: The status of the service
        "500":
          content: {}
          description: Internal Error
      tags:
      - status
      x-eov-operation-handler: controllers/StatusController
  /private-documents:
    post:
      description: Upload a private document, shared between our own organization
        and a partner MSP
      operationId: uploadPrivateDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PrivateDocument'
        description: A document that should be uploaded
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: Successful operation, returns ID of stored document
        "400":
          content: {}
          description: Bad Request
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/ContractController
  /private-documents/{id}:
    get:
      description: Fetch a private document from the database, identified by its id
      operationId: fetchPrivateDocument
      parameters:
      - description: The document ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PrivateDocumentResponse'
          description: Successful operation, returns document
        "500":
          content: {}
          description: Internal Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
  /signatures/{id}:
    put:
      description: store a signature for the document identified by id on the ledger
      operationId: uploadSignature
      parameters:
      - description: The document ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentSignature'
        description: a document signature that should be uploaded
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
          description: Successful operation, returns transaction hash
        "500":
          content: {}
          description: Internal Server Error
      tags:
      - contract
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/ContractController
  /signatures/{id}/{msp}:
    get:
      description: Fetch all signatures for a given msp and a given document id from
        the ledger
      operationId: fetchSignatures
      parameters:
      - description: The document ID
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: A MSP name
        explode: false
        in: path
        name: msp
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: Successful operation, returns json of signatures
        "500":
          content: {}
          description: Internal Server Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
  /signatures/subscribe:
    post:
      callbacks:
        onData:
          '{$request.query.callbackUrl}':
            post:
              operationId: onData_Post
              requestBody:
                $ref: '#/components/requestBodies/inline_object'
                content:
                  application/json:
                    schema:
                      properties:
                        timestamp:
                          description: The timestamp when the tx was created on the
                            ledger (RFC3339)
                          format: date-time
                          type: string
                        msp:
                          type: string
                        eventName:
                          type: string
                        storageKey:
                          type: string
                      type: object
                description: subscription payload
              responses:
                "202":
                  description: the app should return this when the data was received
                    successfully
                "204":
                  description: the app should return this when it is no longer interested
                    in further updates
              x-callback-request: true
      description: subscribes a client to receive new signature events
      operationId: signaturesSubscribePOST
      parameters:
      - description: The location where data will be sent
        explode: true
        in: query
        name: callbackUrl
        required: true
        schema:
          example: https://myapp.local
          format: uri
          type: string
        style: form
      responses:
        "201":
          content:
            text/plain:
              schema:
                description: The unique identifier of the associated subscription
                example: 2531329f-fb09-4ef7-887e-84e648214436
                type: string
          description: Subscription successfully created
        "500":
          content: {}
          description: Internal Server Error
      tags:
      - contract
      x-eov-operation-handler: controllers/ContractController
  /config/offchain-db-adapter:
    put:
      description: Update the configuration of the offchain-db-adapter
      operationId: setOffchainDBAdapterConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OffchainDBAdapterConfig'
        description: A configuration for the offchain-db-adapter
        required: true
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
                x-content-type: text/plain
          description: Successful operation, returns transaction hash
        "500":
          content: {}
          description: Internal Error
      tags:
      - config
      x-codegen-request-body-name: body
      x-eov-operation-handler: controllers/ConfigController
components:
  requestBodies:
    inline_object:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/inline_object'
  schemas:
    PrivateDocument:
      example:
        data: data
        toMSP: toMSP
      properties:
        toMSP:
          description: The partner MSP that is also involved
          type: string
        data:
          description: A base64 encoded document
          type: string
      required:
      - data
      - toMSP
      title: PrivateDocument
      type: object
    PrivateDocumentResponse:
      allOf:
      - $ref: '#/components/schemas/PrivateDocument'
      example:
        fromMSP: fromMSP
        senderID: senderID
        dataHash: dataHash
        id: 0
        timestamp: timestamp
      properties:
        fromMSP:
          description: The MSP that creates this document (optional on request)
          type: string
        senderID:
          description: The hyperledger senderID of the TX
          type: string
        dataHash:
          description: The hash over the document
          type: string
        timestamp:
          description: The timestamp when the document was stored in the local database.
          type: string
        id:
          description: The document ID
          type: integer
      required:
      - dataHash
      - fromMSP
      - id
      - senderID
      - timestamp
      title: PrivateDocumentResponse
      type: object
    DocumentSignature:
      example:
        signature: signature
        certificate: |-
          -----BEGIN CERTIFICATE-----
          MIICYjCCAemgAwIBA...
        algorithm: secp384r1
      properties:
        algorithm:
          description: The algorithm used to sign
          example: secp384r1
          type: string
        certificate:
          description: The certificate of the signer in pem format
          example: |-
            -----BEGIN CERTIFICATE-----
            MIICYjCCAemgAwIBA...
          type: string
        signature:
          description: The digital signature over the document
          type: string
      required:
      - algorithm
      - certificate
      - signature
      title: DocumentSignature
      type: object
    OffchainDBAdapterConfig:
      example:
        restURI: http://offchain-db-adapter:3333/documents
      properties:
        restURI:
          description: URL of the offchain db adapter
          example: http://offchain-db-adapter:3333/documents
          format: uri
          type: string
      required:
      - restURI
      title: OffchainDBAdapterConfig
      type: object
    inline_object:
      properties:
        timestamp:
          description: The timestamp when the tx was created on the ledger (RFC3339)
          format: date-time
          type: string
        msp:
          type: string
        eventName:
          type: string
        storageKey:
          type: string
      type: object
